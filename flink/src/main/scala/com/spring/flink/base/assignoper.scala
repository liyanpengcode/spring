package com.spring.flink.base

/**
 *
 *
 * 赋值运算符
 * 描述
 * 示例
 *
 *
 *
 *
 * =
 * 简单赋值运算符，将右侧操作数的值分配给左侧操作数
 * C = A + B，将A + B的值分配给C
 *
 *
 * +=
 * 相加与赋值运算符。它将右操作数添加到左操作数，并将结果分配给左操作数。
 * C + = A等价于C = C + A
 *
 *
 * -=
 * 相减与赋值运算符。它从左操作数中减去右操作数，并将结果分配给左操作数。
 * C -= A等价于 C = C - A
 *
 *
 * *=
 * 乘以与赋值运算符。它将右操作数与左操作数相乘，并将结果分配给左操作数。
 * C * = A等价于C = C * A
 *
 *
 * /=
 * 除以与赋值运算符。它将左操作数与右操作数分开，并将结果分配给左操作数。
 * C /= A等价于C = C / A
 *
 *
 * %=
 * 模数与赋值运算符。它需要使用两个操作数的模数，并将结果分配给左操作数。
 * C %= A等价于C = C % A
 *
 *
 * <<=
 * 左移与赋值运算符
 * C <<= 2等价于C = C << 2
 *
 *
 * >>=
 * 右移与赋值运算符
 * C >> = 2等价于C = C >> 2
 *
 *
 * &=
 * 按位与赋值运算符
 * C &= 2等价于C = C & 2
 *
 *
 * ^=
 * 按位异或运算符和赋值运算符。
 * C ^= 2等价于C = C ^ 2
 *
 *
 * ｜=
 * 按位包含OR和赋值运算符。
 * C ｜=2 等价于 C = C | 2
 */
object assignoper {
  def main(args: Array[String]): Unit = {
    var num = 2
    num <<= 2
    println("num=" + num)
  }

}
